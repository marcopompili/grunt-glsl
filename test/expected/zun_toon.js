var zun_toon_vx_glsl = [
'struct v2f_vertex_lit {',
'    vec2 uv;',
'    vec4 diff;',
'    vec4 spec;',
'};',
'struct v2f_img {',
'    vec4 pos;',
'    vec2 uv;',
'};',
'struct appdata_img {',
'    vec4 vertex;',
'    vec2 texcoord;',
'};',
'struct v2f {',
'    vec4 pos;',
'    vec2 texcoord;',
'    vec3 cubenormal;',
'};',
'struct appdata {',
'    vec4 vertex;',
'    vec2 texcoord;',
'    vec3 normal;',
'};',
'uniform vec4 _MainTex_ST;',
'',
'v2f vert( in appdata v );',
'v2f vert( in appdata v ) {',
'    v2f o;',
'    o.pos = ( gl_ModelViewProjectionMatrix * v.vertex );',
'    o.texcoord = ((v.texcoord.xy  * _MainTex_ST.xy ) + _MainTex_ST.zw );',
'    o.cubenormal = vec3( ( gl_ModelViewMatrix * vec4( v.normal, 0.000000) ));',
'    return o;',
'}',
'void main() {',
'    v2f xl_retval;',
'    appdata xlt_v;',
'    xlt_v.vertex = vec4( gl_Vertex);',
'    xlt_v.texcoord = vec2( gl_MultiTexCoord0);',
'    xlt_v.normal = vec3( gl_Normal);',
'    xl_retval = vert( xlt_v);',
'    gl_Position = vec4( xl_retval.pos);',
'    gl_TexCoord[0] = vec4( xl_retval.texcoord, 0.0, 0.0);',
'    gl_TexCoord[1] = vec4( xl_retval.cubenormal, 0.0);',
'}',
].join("\n");
var zun_toon_fx_glsl = [
'struct v2f_vertex_lit {',
'    vec2 uv;',
'    vec4 diff;',
'    vec4 spec;',
'};',
'struct v2f_img {',
'    vec4 pos;',
'    vec2 uv;',
'};',
'struct appdata_img {',
'    vec4 vertex;',
'    vec2 texcoord;',
'};',
'struct v2f {',
'    vec4 pos;',
'    vec2 texcoord;',
'    vec3 cubenormal;',
'};',
'struct appdata {',
'    vec4 vertex;',
'    vec2 texcoord;',
'    vec3 normal;',
'};',
'uniform vec4 _Color;',
'uniform sampler2D _MainTex;',
'uniform samplerCube _ToonShade;',
'vec4 frag( in v2f i );',
'vec4 frag( in v2f i ) {',
'    vec4 col;',
'    vec4 cube;',
'    col = (_Color * texture2D( _MainTex, i.texcoord));',
'    cube = textureCube( _ToonShade, i.cubenormal);',
'    return vec4( ((2.00000 * cube.xyz ) * col.xyz ), col.w );',
'}',
'void main() {',
'    vec4 xl_retval;',
'    v2f xlt_i;',
'    xlt_i.pos = vec4(0.0);',
'    xlt_i.texcoord = vec2( gl_TexCoord[0]);',
'    xlt_i.cubenormal = vec3( gl_TexCoord[1]);',
'    xl_retval = frag( xlt_i);',
'    gl_FragData[0] = vec4( xl_retval);',
'}',
].join("\n");
